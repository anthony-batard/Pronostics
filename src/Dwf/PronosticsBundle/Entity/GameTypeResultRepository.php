<?php

namespace Dwf\PronosticsBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Dwf;

/**
 * GameTypeResultRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GameTypeResultRepository extends EntityRepository
{
    public function getResultsByGameTypeAndEvent($type, Dwf\PronosticsBundle\Entity\Event $event)
    {
        $qb = $this->createQueryBuilder('g')
        ->leftJoin('g.team', 't')
        //->addSelect('p.user')        
        ->select('t.name as team', 't.id as team_id','SUM(g.result) AS total', 'SUM(g.goalaverage) AS goals')
        ->where('g.gameType = :type')
        ->setParameter('type', $type)
        ->andWhere('g.event = :event')
        ->setParameter('event', $event)
        ->groupBy('g.team')
        ->addOrderBy('total', 'DESC')
        ->addOrderBy('g.goalaverage', 'DESC')
                ;
        
        $query = $qb->getQuery();
//         var_dump($query->getSql());
        		return $query->getResult();
        
    }
    
    public function getResultsByGameTypeAndEventAndTeam($type, Dwf\PronosticsBundle\Entity\Event $event, Dwf\PronosticsBundle\Entity\Team $team)
    {
    	$qb = $this->createQueryBuilder('g')
    	->leftJoin('g.team', 't')
    	//->addSelect('p.user')
    	->select('t.name as team', 't.id as team_id','SUM(g.result) AS total', 'SUM(g.goalaverage) AS goals')
    	->where('g.gameType = :type')
    	->setParameter('type', $type)
    	->andWhere('g.event = :event')
    	->setParameter('event', $event)
    	->andWhere('t.id = :team')
    	->setParameter('team', $team->getId())
    	->groupBy('g.team')
    	->addOrderBy('total', 'DESC')
    	->addOrderBy('g.goalaverage', 'DESC')
    	;
    
    	$query = $qb->getQuery();
    	//         var_dump($query->getSql());
    	return $query->getResult();
    
    }
    
    public function getResultsByEvent(Dwf\PronosticsBundle\Entity\Event $event)
    {
    	$qb = $this->createQueryBuilder('g')
    	->leftJoin('g.team', 't')
    	//->addSelect('p.user')
    	->select('t.name as team', 't.id as team_id','SUM(g.result) AS total', 'SUM(g.goalaverage) AS goals')
    	->where('g.event = :event')
    	->setParameter('event', $event)
    	->groupBy('g.team')
    	->addOrderBy('total', 'DESC')
    	->addOrderBy('g.goalaverage', 'DESC')
    	;
    
    	$query = $qb->getQuery();
    	//         var_dump($query->getSql());
    	return $query->getResult();
    
    }
    
    public function getMaxGameTypeIdByEvent(Dwf\PronosticsBundle\Entity\Event $event)
    {
        $qb = $this->createQueryBuilder('g')
        ->leftJoin('g.team', 't')
        //->addSelect('p.user')
        ->select('MAX(g.gameType) AS id')
        ->where('g.event = :event')
        ->setParameter('event', $event)
        ->groupBy('g.event')
        ;
    
        $query = $qb->getQuery();
        //         var_dump($query->getSql());
        return $query->getOneOrNullResult();
    
    }
    
    public function findBestOffensesByEvent(Dwf\PronosticsBundle\Entity\Event $event)
    {
        $qb = $this->createQueryBuilder('g')
        ->leftJoin('g.team', 't')
        //->addSelect('p.user')
        ->select('t.name as team', 't.id as team_id', 'SUM(g.goalaverage) AS goals')
        ->where('g.event = :event')
        ->setParameter('event', $event)
        ->groupBy('g.team')
        ->addOrderBy('goals', 'DESC')
        ->setMaxResults(10)
        ;
    
        $query = $qb->getQuery();
        //         var_dump($query->getSql());
        return $query->getResult();
    
    }
    
    public function findBestDefensesByEvent(Dwf\PronosticsBundle\Entity\Event $event)
    {
        $qb = $this->createQueryBuilder('g')
        ->leftJoin('g.team', 't')
        //->addSelect('p.user')
        ->select('t.name as team', 't.id as team_id', 'SUM(g.goalaverage) AS goals')
        ->where('g.event = :event')
        ->setParameter('event', $event)
        ->groupBy('g.team')
        ->addOrderBy('goals', 'ASC')
        ->setMaxResults(10)
        ;
    
        $query = $qb->getQuery();
        //         var_dump($query->getSql());
        return $query->getResult();
    
    }
    
    public function getResultsByGame(Dwf\PronosticsBundle\Entity\Game $game)
    {
    	$qb = $this->createQueryBuilder('g')
    	->where('g.game = :game')
    	->setParameter('game', $game)    	
    	;
    
    	$query = $qb->getQuery();
    	return $query->getResult();
    
    }
}
